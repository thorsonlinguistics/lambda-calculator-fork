/*
 * TreeTester.java
 *
 * Created on May 22, 2007, 10:54 AM
 */

package lambdacalc.gui.tree;

import java.awt.*;
import javax.swing.*;
import lambdacalc.logic.*;
import lambdacalc.lf.*;

/**
 *
 * @author  tauberer
 */
public class TreeTester extends javax.swing.JFrame {
    
   TreeCanvas tree = new TreeCanvas();

    /** Creates new form TreeTester */
    public TreeTester() {
        initComponents();
        jPanel1.add(tree);
    }
    
    void createTree() {
        try {
            ExpressionParser.ParseOptions opts = new ExpressionParser.ParseOptions();
            opts.ASCII = true;
            opts.singleLetterIdentifiers = false;
                    
            Lexicon lexicon = new Lexicon();
            lexicon.addLexicalEntry("sleeps", ExpressionParser.parse("Lx[sleeps(x)]", opts));
            lexicon.addLexicalEntry("saw", ExpressionParser.parse("LyLx[saw(x,y)]", opts));
            lexicon.addLexicalEntry("John", ExpressionParser.parse("a", opts));
            lexicon.addLexicalEntry("Mary", ExpressionParser.parse("b", opts));
            
            RuleList rules = new RuleList();
            
            rules.add(FunctionApplicationRule.INSTANCE);
            
            Nonterminal root = BracketedTreeParser.parse(jTextField1.getText());

            root.guessLexicalEntries(lexicon);
            root.guessRules(rules, false);
            
            tree.getRoot().clearChildren();
            buildTree(tree.getRoot(), root);
        } catch (Exception e) {
            System.err.println(e);
        }
       
    }
    
    void buildTree(TreeCanvas.JTreeNode treenode, LFNode lfnode) throws MeaningEvaluationException, TypeEvaluationException {
        // [=fa; John=a; [=fa; loves=Lx.Ly.[loves(y,x)]; Mary=b;]]
        // [=fa; John=Ix(john(x)); [=fa; loves=Lx.Ly.loves(y,x); Mary=Ix(mary(x));]]
        
        
        
        
        JPanel panel = new JPanel();
        BoxLayout bl = new BoxLayout(panel, BoxLayout.Y_AXIS);
        panel.setLayout(bl);
                
        Expr expr = lfnode.getMeaning();
        while (true) {
            JLabel line = new JLabel();
            line.setText(expr.toString());
            line.setFont(lambdacalc.gui.Util.getUnicodeFont(14));
            panel.add(line);

            Expr.LambdaConversionResult r = expr.performLambdaConversion();
            if (r == null)
                break;
            expr = r.result;
        }

        treenode.setLabel(panel);
        
        if (lfnode instanceof Nonterminal) {
            Nonterminal nt = (Nonterminal)lfnode;
            for (int i = 0; i < nt.size(); i++)
                buildTree(treenode.addChild(), nt.getChild(i));
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        System.out.println("text field action performed");
        createTree();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
    }//GEN-LAST:event_formMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TreeTester().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
}
