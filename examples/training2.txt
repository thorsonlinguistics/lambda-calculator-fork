Training Assignment 2

constants of type e : c p r s
variables of type e : x-z
variables of type v : e
variables of type <e,t> : P-Q X-Z
variables of type <e,et> : R
variables of type <e,<e,et>> : S
variables of type <v,t> : T

multiple letter identifiers

use rule function application
use rule non-branching nodes
use rule predicate modification
use rule lambda abstraction

define Carlos : c
define Paco : p
define Ron : r
define Sue : s
define Philadelphia : p
define shaves : LxLy[shaves(y,x)]
define introduces : LxLyLz[introduces(z,x,y)]
define hug : Le.HUGG\ING(e)

define the : LP.Ix.P(x)
define woman: Lx.woman(x)
define introduced : LxLyLz[introduced(z,x,y)]
define niece-of : LxLy[niece-of(y,x)]
define rock-star : Lx.rock-star(x)
define liked : LxLy.liked(y,x)

# Finally, the exercises themselves are entered.

exercise tree
title Formulating NatLg denotations as lambda-expressions
directions In some languages, there is a morpheme (e.g., Middle Voice in Ancient 
directions Greek, reflexivizing affix in Kannada, Passive Voice in Finnish, etc.) 
directions that attaches to the verb stem and reduces its arity by one. Let us 
directions take the following imaginary morphemes α, β, γ, and δ. 
directions Assuming the syntactic structure given, give a denotation for each of 
directions these morphemes (in lambda-notation, for any arbitrary situation). \\
directions \\
directions Note the typing conventions of P, R and S.

# [.IP [NPsu [.VP [.V' [.V^0 MORPH Vstem] NPdo] NPio]]]

instructions For the sentence in (1), make the structure below yield
instructions the meaning in (2) by supplying the denotation of α.
instructions (1) Carlos-SU α-shaves \\
instructions (2) “Carlos shaves Carlos” (i.e., Carlos shaves himself)
[.IP Carlos [.VP α shaves]]

instructions For the sentence in (1), make the structure below yield
instructions the meaning in (2) by supplying the denotation of β.
instructions Check your answer by having Lambda step through the
instructions derivation. \\
instructions (1) Carlos-SU  β-introduces  Paco-DO. \\
instructions (2) “Carlos introduces Paco to Carlos (himself).”
[.IP Carlos [.VP [.V^0 β introduces] Paco ]]

instructions For the sentence in (1), make the structure below yield
instructions the meaning in (2) by supplying the denotation of γ.
instructions Check your answer by having Lambda step through the
instructions derivation. \\
instructions (1) Carlos-SU  γ-introduces  Paco-DO. \\
instructions (2) “Carlos introduces Paco to Paco (himself).”
[.IP Carlos [.VP [.V^0 γ introduces] Paco ]]

instructions For the sentence in (1), make the structure below yield
instructions the meaning in (2) by supplying the denotation of δ.
instructions Check your answer by having Lambda step through the
instructions derivation. \\
instructions (1) Carlos-SU  δ-introduces  Paco-IO. \\
instructions (2) “Carlos introduces nobody but Carlos (himself) to Paco.”
[.IP Carlos [.VP [.V^0 δ introduces] Paco ]]

exercise tree
title More NatLg denotations as lambda-expressions.
directions We have assumed that, in the formal translation of a sentence,
directions a predicate combines with its Agent, Patient, Goal, etc., directly,
directions as shown in (2)-(3) (as in PrL): \\
directions  \\
directions (1)	Ron hugged Sue. \\
directions (2)	[[Ron hugged Sue]] = 1 iff {HUG(r,s)} \\
directions (3)	[[hug]] = {LxLy.HUG(y,x)} \\
directions \\
directions An alternative view posits that the formal predicate combines only to
directions its event argument, while the theta roles are introduced as separate
directions formal predicates relating the event to the relevant argument. This
directions approach, called neo-Davidsonian, is exemplified in (4), where e is
directions an event variable, type v.  To achieve the truth conditions in (4),
directions two compositional approaches have been pursued: (5) and (6). \\
directions (4)	[[(1)]] = 1 iff {Ee_v.[HUGG\ING(e) & \AG(e,r) & P\AT(e,s)]} \\
directions (5)	[[hug]] = {LxLyLe_v.HUGG\ING(e) & \AG(e,y) & P\AT(e,x)}  \\
directions (6)	[[hug]]	= {Le_v.HUGG\ING(e)} \\
directions In this exercise we’ll concentrate in the second version of the
directions neo-Davidsonian approach, in (6).

instructions Ron hugged Sue in Philadelphia. \\
instructions 1) Spell out the denotations of the functional head Ag0 and Pat0
instructions as lambda-expressions of type <<v,t>,<e,<v,t>>>, 2) spell out the
instructions denotation of the preposition in as a lambda-expression of type
instructions <e,<v,t>>, and 3) do the semantic computation of the sentence step
instructions by step.
[.AgP [.NP Ron] [.Ag' Ag^0 [.PatP [.PatP [.Pat' [.V hug] Pat^0] [.NP Sue] ] [.PP in Philadelphia] ]]]

instructions Your second task is the following. Assuming the partial syntactic
instructions structure below for example (1), provide the denotation of the
instructions applicative el morpheme. Do the semantic interpretation of the entire
instructions tree step by step, using the lexical entries you proposed in the
instructions previous question. [NOTES: Conveniently ignore any other morphology.
instructions Also, assume that khali denotes this particular pot.] \\
instructions \\
instructions (1) Nd-o-far-el-a Mukasa khali \\
instructions 1sg-PAST-hold-APPL-FV Mukasa pot \\
instructions “I held the pot for Mukasa.”

[.PatP [.Pat' [.ApplP [.Appl' [.V^0 far] [.Appl^0 el]] Mukasa] Pat^0] khali]


exercise tree
title Top-Down Semantic Computations

instructions Do the semantic computation of (1) top-down, spelling
instructions out the denotation of topmost. [You can use the PrL predicates
instructions OVER (“to be over or on top of”) and UNDER (“to be under”),
instructions but not the PrL predicate TOPMOST.] \\
instructions \\
instructions (1) the woman the topmost portrait of whom1 please her1 husband

[.DP_1 the [.NP_1 woman [.CP who_1 [.IP [.DP_2 the [.NP_2 topmost [portrait-of t_1]]] [.VP pleased [.DP_3 the [.NP_3 husband-of her_1]]]]]]]


instructions Do the semantic computation of (1) bottom-up. Ignore index
instructions 2 on DP2 during the computation, but comment on how we could
instructions ensure the intended coreference between [her niece]2 and her2. \\
instructions \\
instructions (1) the woman which1 introduced [her1 niece]2 to the rock-star (which3) she2 liked t3

[.DP_1 the [.NP_1 woman [.CP_1 which_1 [.IP_1 t_1 [.VP_1 [.VP introduced [.DP_3 the [.NP_3 niece-of hers_1]]] [.PP (to) [.DP_3 the [.NP_3 rock-star [.CP_3 which_3 [.IP_3 she_1 [.VP liked t_3] ] ]] ]]]]]]]

