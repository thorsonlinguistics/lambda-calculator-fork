Lucas Champollion's companion file to Anna Szabolcsi's handout "An all-purpose notation for functions: Lambdas"

# Author and license holder of this file: Lucas Champollion (champollion@nyu.edu)
# This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0). You are free to share — copy and redistribute the material in any medium or format; adapt — remix, transform, and build upon the material for any purpose, even commercially. 
# The copyright to Anna Szabolcsi's handout remains with her.


constants of type e : a b-c
constants of type <e,t> : f h
constants of type <e*e,t> : R
variables of type e : x-z
variables of type <et> : P



exercise lambda conversion
title Lambda Conversion
directions Simplify, if possible, the following lambda expressions by applying beta reduction. 
points per exercise 10

Lx[f(x) & h(x)] (a)
Lx[f(x) & Ax[h(x)]] (a)
Lx[Ay [f(x) -> h(y)]] (y)
Lx[Ly[R(x,y)]] (a) (b)
Lx[Ly[R(x,y)] (a)] (b)

exercise semantic types
title Semantic Types
directions Give the semantic type of the following lambda-expressions. You may want to simplify them in your mind if necessary before assigning a type.
points per exercise 20

Lx.f(x) & h(x)
[Lx [LP [P(x)]]]