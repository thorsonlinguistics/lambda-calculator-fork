Cecile Meier, Embedded definites. In R. van Rooy, editor, Proceedings of the Fourteenth Amsterdam Colloquium, pages 163–168, Amsterdam, Netherlands, 2003. ILLC / University of Amsterdam.

# Author and license holder of this file: Lucas Champollion (champollion@nyu.edu)
# This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0). You are free to share — copy and redistribute the material in any medium or format; adapt — remix, transform, and build upon the material for any purpose, even commercially. 
# The copyright to Cecile Meier's work remains with her.

# Global declarations

multiple letter identifiers

use rule function application
use rule non-branching nodes
use rule predicate modification
use rule lambda abstraction


# Constants and variables

variables of type e: x y z
variables of type et: R P Q
variables of type <et,et>: D
constants of type <e*e,t>: in

###############################################################
# Lexicon

define the-ref: LR.Ix[R(x)]
define circle: Lx.circle(x)
define in: LD.LP.LQ.Lx.[Q(x) & Ey[D(Lz.in(x,z) & P(z))(y)]]
define the-pred: LP.Lx.P(x) & Ay[P(y) -> x=y]
define square: Lx.square(x)



#################################################################

# Figures

exercise tree
title Cecile Meier 2003, Embedded Definites

instructions the circle in the square
[.NP the-ref [.N circle [ [.P in the-pred ] square ] ] ]
