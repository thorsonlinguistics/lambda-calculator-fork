Landman 2000 chapter 2

# Author and license holder of this file: Lucas Champollion (champollion@nyu.edu)
# This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0). You are free to share — copy and redistribute the material in any medium or format; adapt — remix, transform, and build upon the material for any purpose, even commercially. 
# The copyright to Fred Landman's work remains with him.

constants of type e : j b m john mary bill
constants of type <e,t> : boy girl
constants of type <v,t> : walk kiss 
constants of type <v,e>  : ag th inst agent patient
variables of type e : x y z
variables of type v : e 
variables of type <e,t> : P Q
variables of type <v,t> : R
variables of type <<e,t>,t> : T
constants of type <<e,t>,e> : sigma
# only events, no plurals, in this chapter, so this is the singular definite article

multiple letter identifiers

use rule function application
use rule non-branching nodes
use rule predicate modification
use rule lambda abstraction

define walk, walks : Lx.Le[walk(e) & agent(e)=x]

define kiss, kisses, kissed : Ly.Lx.Le[kiss(e) & agent(e)=x & patient(e) = y]
define stab, stabs : Ly.Lx.Le[stab(e) & agent(e)=x & patient(e)=y]

define john: john
define mary : mary
define brutus : b

define a: LQ.LP.Ex[Q(x) & P(x)]
define every: LQ.LP.Ax[Q(x) -> P(x)]
define no: LQ.LP.~Ex[Q(x) & P(x)]

define everygirl: LP.Ax[girl(x) -> P(x)]

define the: LP.sigma(P)

define boy: Lx.boy(x)
define girl: Lx.girl(x)
define senator: Lx.senator(x)
define knife: Lx.knife(x)

define closure: LR.Ee.R(e)

define lift-iv : LV_<e,vt>.LT.Le.T(Lx.V(x)(e))
define lift-tv : LV_<e,<e,vt>>.LT.Lx.Le.T(Ly.V(y)(x)(e))
define lift-np : Lx.LP.P(x)

define quickly-iv : LV_<e,vt>.Lx.Le.[V(x)(e) & quick-manner(e)]
define quickly-tv : LV_<e,<e,vt>>.Ly.Lx.Le.[V(y)(x)(e) & quick-manner(e)]

define with-iv : Ly.LV_<e,vt>.Lx.Le.[V(x)(e) & inst(e)=y]
define with-tv : Ly.LV_<e,<e,vt>>.Ly.Lx.Le.[V(y)(x)(e) & inst(e)=y]

# Chapter 3
define passive, was : LV_<e,<e,vt>>.Ly.Le.Ex.V(y)(x)(e)
define by : Lx.LV_<e,vt>.Ly.Le.[V(y)(e) & agent(e)=x]

# Problem: This makes "Mary was kissed by nobody" a contradiction.

# According to Landman, the unique role requirement receives support from passives. According to Krifka, we want to drop it for "touch" and "see".

# Come back to Landman pp.82ff. after reading Yoad Winter.

##########################################################################################

exercise tree
title Example sentences
directions Do the derivation.

# Chapter 2

# in situ functional application
[ closure [ [ the boy ] walks ] ]
[ closure [ john walks ] ]

[ closure [ [lift-np john ] [ lift-iv walks ] ] ]


[ everygirl  [ 1 [.CP closure [.IP  john [.VP kissed t_1 ] ] ] ] ]

[ [ every girl ] [ 1 [ closure [ john [ kissed t_1 ] ] ] ] ]

# type shifting
[ closure [ [ every boy ] [ lift-iv walks ] ] ]

[ closure [ john [ [ lift-tv kisses ] [ every boy ] ] ] ]

[ closure [ [ a boy ]  [ lift-iv [ [ lift-tv kisses ] [ a girl ] ] ] ] ]

[ closure [ [ every boy ]  [ lift-iv [ [ lift-tv kisses ] [ every girl ] ] ] ] ]

# Using QR to simulate Landman's quantifying-in for the subject NP, and type shifting for the object NP.
[ [ every boy ] [ 1 [ closure [ t_1  [ [ lift-tv kisses ] [ every girl ] ] ] ] ] ] 

# Using QR for both the subject and the object NP.
[ [ every boy ] [ 1 [ [ every girl ] [ 2 [ closure [ t_1 [ kisses  t_2 ] ] ] ] ] ] ] 

# Transitive verb modifier
[ closure [ john [ [ quickly-tv kisses ] mary ] ] ]

# Intransitive verb modifier
[ closure [ john [ quickly-iv walks ] ] ]


# Preposition: applied to transitive verb (as in the book)
[ [ every knife ] [ 1 [ closure [ brutus [ [ lift-tv [ stabs [ with-tv t_1 ] ] ] [ a senator ]  ] ] ] ] ]

# Preposition: applied to VP 
[ [ every knife ] [ 1 [ closure [ brutus [ [ [ lift-tv stabs ] [ a senator ] ] [ with-iv t_1 ] ] ] ] ] ]

# Chapter 3: Passive
 
[ closure [ mary [ was kissed ] ] ]
 
[ closure [ mary [ [ was kissed ] [ by john ] ] ] ]
  
 
 
 

# Using QR leaves a trace behind which is of type e, so no type-lifting necessary.

# The point of QR is not only that it changes the scope relations between the overt quantifiers but also with respect to the existential closure. Since existential closure applies at the end of the sentence, QR will need to break islands if the sentence is supposed to speak of more than one event.

# Any quantifier except for "some" and "no" and others that are compatible with at most one element in the restrictor satisfying the nucleus, must be QRed over the existential closure to avoid violating thematic uniqueness.


# In my system, the event quantifier always has lowest scope, because it's built into the verb. Question: how about attitude verbs in my system?


